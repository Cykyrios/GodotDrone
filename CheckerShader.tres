[gd_resource type="VisualShader" load_steps=29 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=2]
function = 14

[sub_resource type="VisualShaderNodeInput" id=3]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=4]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarUniform" id=5]
uniform_name = "CellsX"

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
function = 14

[sub_resource type="VisualShaderNodeScalarOp" id=7]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeIf" id=9]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.0, 2, 1e-05, 3, Vector3( 1, 1, 1 ), 4, Vector3( 0, 0, 0 ), 5, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeVectorDecompose" id=10]

[sub_resource type="VisualShaderNodeVectorDecompose" id=11]

[sub_resource type="VisualShaderNodeScalarFunc" id=12]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 31.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
output_port_for_preview = 0
function = 16

[sub_resource type="VisualShaderNodeScalarConstant" id=15]
constant = 3.14159

[sub_resource type="VisualShaderNodeScalarOp" id=16]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=17]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=18]
default_input_values = [ 0, 0.0, 1, 31.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=19]
output_port_for_preview = 0
function = 16

[sub_resource type="VisualShaderNodeScalarOp" id=20]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=21]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=22]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=23]
function = 31

[sub_resource type="VisualShaderNodeVectorOp" id=24]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=25]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarUniform" id=26]
uniform_name = "CellsY"

[sub_resource type="VisualShaderNodeColorUniform" id=27]
uniform_name = "Color1"

[sub_resource type="VisualShaderNodeColorUniform" id=28]
uniform_name = "Color2"

[resource]
code = "shader_type spatial;
uniform float CellsX;
uniform float CellsY;
uniform vec4 Color1 : hint_color;
uniform vec4 Color2 : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// ScalarUniform:22
	float n_out22p0 = CellsX;

// ScalarOp:18
	float n_out18p0 = n_out3p0 * n_out22p0;

// ScalarFunc:19
	float n_out19p0 = floor(n_out18p0);

// ScalarOp:20
	float n_out20p0 = n_out19p0 / n_out22p0;

// Scalar:48
	float n_out48p0 = 3.141590;

// ScalarOp:49
	float n_out49p0 = n_out22p0 * n_out48p0;

// ScalarOp:46
	float n_out46p0 = n_out20p0 * n_out49p0;

// ScalarFunc:45
	float n_out45p0 = sin(n_out46p0);

// ScalarFunc:47
	float n_out47p0 = ceil(n_out45p0);

// VectorDecompose:4
	float n_out4p0 = n_out2p0.x;
	float n_out4p1 = n_out2p0.y;
	float n_out4p2 = n_out2p0.z;

// ScalarUniform:61
	float n_out61p0 = CellsY;

// ScalarOp:27
	float n_out27p0 = n_out4p1 * n_out61p0;

// ScalarFunc:24
	float n_out24p0 = floor(n_out27p0);

// ScalarOp:25
	float n_out25p0 = n_out24p0 / n_out61p0;

// ScalarOp:53
	float n_out53p0 = n_out61p0 * n_out48p0;

// ScalarOp:51
	float n_out51p0 = n_out25p0 * n_out53p0;

// ScalarFunc:50
	float n_out50p0 = sin(n_out51p0);

// ScalarFunc:52
	float n_out52p0 = ceil(n_out50p0);

// If:28
	float n_in28p2 = 0.00001;
	vec3 n_in28p3 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_in28p4 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in28p5 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out28p0;
	if(abs(n_out47p0 - n_out52p0) < n_in28p2)
	{
		n_out28p0 = n_in28p3;
	}
	else if(n_out47p0 < n_out52p0)
	{
		n_out28p0 = n_in28p5;
	}
	else
	{
		n_out28p0 = n_in28p4;
	}

// VectorDecompose:54
	float n_out54p0 = n_out28p0.x;
	float n_out54p1 = n_out28p0.y;
	float n_out54p2 = n_out28p0.z;

// ColorUniform:62
	vec3 n_out62p0 = Color1.rgb;
	float n_out62p1 = Color1.a;

// VectorOp:55
	vec3 n_out55p0 = vec3(n_out54p0) * n_out62p0;

// ScalarFunc:57
	float n_out57p0 = 1.0 - n_out54p0;

// ColorUniform:63
	vec3 n_out63p0 = Color2.rgb;
	float n_out63p1 = Color2.a;

// VectorOp:58
	vec3 n_out58p0 = vec3(n_out57p0) * n_out63p0;

// VectorOp:60
	vec3 n_out60p0 = n_out55p0 + n_out58p0;

// Output:0
	ALBEDO = n_out60p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1438, -271.75 )
nodes/fragment/0/position = Vector2( 400, 0 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -2400, 0 )
nodes/fragment/3/node = SubResource( 10 )
nodes/fragment/3/position = Vector2( -2220, -80 )
nodes/fragment/4/node = SubResource( 11 )
nodes/fragment/4/position = Vector2( -2220, 140 )
nodes/fragment/18/node = SubResource( 1 )
nodes/fragment/18/position = Vector2( -2000, -80 )
nodes/fragment/19/node = SubResource( 2 )
nodes/fragment/19/position = Vector2( -1840, -60 )
nodes/fragment/20/node = SubResource( 4 )
nodes/fragment/20/position = Vector2( -1660, -80 )
nodes/fragment/22/node = SubResource( 5 )
nodes/fragment/22/position = Vector2( -2400, 400 )
nodes/fragment/24/node = SubResource( 6 )
nodes/fragment/24/position = Vector2( -1840, 160 )
nodes/fragment/25/node = SubResource( 7 )
nodes/fragment/25/position = Vector2( -1660, 140 )
nodes/fragment/27/node = SubResource( 8 )
nodes/fragment/27/position = Vector2( -2000, 140 )
nodes/fragment/28/node = SubResource( 9 )
nodes/fragment/28/position = Vector2( -560, -20 )
nodes/fragment/45/node = SubResource( 12 )
nodes/fragment/45/position = Vector2( -940, -100 )
nodes/fragment/46/node = SubResource( 13 )
nodes/fragment/46/position = Vector2( -1100, -100 )
nodes/fragment/47/node = SubResource( 14 )
nodes/fragment/47/position = Vector2( -760, -100 )
nodes/fragment/48/node = SubResource( 15 )
nodes/fragment/48/position = Vector2( -1480, 100 )
nodes/fragment/49/node = SubResource( 16 )
nodes/fragment/49/position = Vector2( -1280, -20 )
nodes/fragment/50/node = SubResource( 17 )
nodes/fragment/50/position = Vector2( -940, 80 )
nodes/fragment/51/node = SubResource( 18 )
nodes/fragment/51/position = Vector2( -1100, 80 )
nodes/fragment/52/node = SubResource( 19 )
nodes/fragment/52/position = Vector2( -760, 80 )
nodes/fragment/53/node = SubResource( 20 )
nodes/fragment/53/position = Vector2( -1280, 160 )
nodes/fragment/54/node = SubResource( 21 )
nodes/fragment/54/position = Vector2( -400, -20 )
nodes/fragment/55/node = SubResource( 22 )
nodes/fragment/55/position = Vector2( 20, -120 )
nodes/fragment/57/node = SubResource( 23 )
nodes/fragment/57/position = Vector2( -180, 120 )
nodes/fragment/58/node = SubResource( 24 )
nodes/fragment/58/position = Vector2( 20, 100 )
nodes/fragment/60/node = SubResource( 25 )
nodes/fragment/60/position = Vector2( 200, 0 )
nodes/fragment/61/node = SubResource( 26 )
nodes/fragment/61/position = Vector2( -2400, 460 )
nodes/fragment/62/node = SubResource( 27 )
nodes/fragment/62/position = Vector2( -180, -20 )
nodes/fragment/63/node = SubResource( 28 )
nodes/fragment/63/position = Vector2( -180, 200 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 2, 0, 4, 0, 3, 0, 18, 0, 19, 0, 20, 0, 24, 0, 25, 0, 4, 1, 27, 0, 27, 0, 24, 0, 18, 0, 19, 0, 46, 0, 45, 0, 20, 0, 46, 0, 45, 0, 47, 0, 49, 0, 46, 1, 48, 0, 49, 1, 51, 0, 50, 0, 50, 0, 52, 0, 53, 0, 51, 1, 25, 0, 51, 0, 48, 0, 53, 1, 47, 0, 28, 0, 52, 0, 28, 1, 28, 0, 54, 0, 54, 0, 55, 0, 54, 0, 57, 0, 57, 0, 58, 0, 55, 0, 60, 0, 58, 0, 60, 1, 60, 0, 0, 0, 62, 0, 55, 1, 63, 0, 58, 1, 22, 0, 18, 1, 22, 0, 20, 1, 22, 0, 49, 0, 61, 0, 27, 1, 61, 0, 25, 1, 61, 0, 53, 0, 2, 0, 3, 0, 2, 0, 4, 0, 3, 0, 18, 0, 19, 0, 20, 0, 24, 0, 25, 0, 4, 1, 27, 0, 27, 0, 24, 0, 18, 0, 19, 0, 46, 0, 45, 0, 20, 0, 46, 0, 45, 0, 47, 0, 49, 0, 46, 1, 48, 0, 49, 1, 51, 0, 50, 0, 50, 0, 52, 0, 53, 0, 51, 1, 25, 0, 51, 0, 48, 0, 53, 1, 47, 0, 28, 0, 52, 0, 28, 1, 28, 0, 54, 0, 54, 0, 55, 0, 54, 0, 57, 0, 57, 0, 58, 0, 55, 0, 60, 0, 58, 0, 60, 1, 60, 0, 0, 0, 62, 0, 55, 1, 63, 0, 58, 1, 22, 0, 18, 1, 22, 0, 20, 1, 22, 0, 49, 0, 61, 0, 27, 1, 61, 0, 25, 1, 61, 0, 53, 0 )
